name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker Image
        run: |
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/my-portfolio"
          docker build -t $IMAGE_URI:${{ github.run_number }} .

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.12.0
        with:
          image-ref: ${{ steps.login-ecr.outputs.registry }}/my-portfolio:${{ github.run_number }}
          format: 'table'
          exit-code: '0'       # Fail the job if CRITICAL/HIGH vulns found
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Push image to Amazon ECR
        if: success()   # Only run if previous step (scan) passes
        run: |
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/my-portfolio"
          docker push $IMAGE_URI:${{ github.run_number }}
